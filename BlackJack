'''This program is an BlackJack Python implementation
Author: Wahab Ehsan'''
import random
import sys


class Card:
    __type = ""
    __value = 0
    __color = ""

    def __init__(self, type, value):
        self.__type = type
        self.__value = value
        if type == "Heart" or "Diamond":
            self.__color = "Red"
        else:
            self.__color = "Black"

    def __type(self, type):
        set.__type = type

    def __type(self):
        return self.__type

    def set_value(self, value):
        set.__value = value

    def get_value(self):
        return self.__value

    def get_color(self):
        return self.__color

    def get_weight(self):
        if self.__value == 11:
            return 10
        elif self.__value == 12:
            return 10
        elif self.__value == 13:
            return 10
        elif self.__value == 14:
            return 11
        else:
            return self.__value

    def changeWeightToOne(self):
        if self.__value == 14:
            return 1

    def toString(self):
        val = self.__value
        if self.__value == 11:
            val = "Jack"
        elif self.__value == 12:
            val = "Queen"
        elif self.__value == 13:
            val = "King"
        elif self.__value == 14:
            val = "Ace"
        return "{} of {}".format(val, self.__type)


class DeckOfCards:
    cards = []

    def __init__(self):
        self.addCards()

    def addCards(self):
        for x in range(2, 15):
            self.cards.append(Card("Hearts", x))
            self.cards.append(Card("Clubs", x))
            self.cards.append(Card("Spades", x))
            self.cards.append(Card("Diamonds", x))

    def toString(self):

        content = "["
        for x in self.cards:
            content += x.toString() + ", "
        # Returns the content and removes the extra space and comma by a backspace times two.
        return content + "\b"*2 + "]"


class BlackJack:
    thedeck = None
    hand = []
    picked = []

    def __init__(self):
        self.thedeck = DeckOfCards()
        self.picked = [False] * 52

    def pickTwo(self):
        print("Your first two cards: ")
        firstcardi = 0
        secondcardi = 0
        while firstcardi == secondcardi:
            firstcardi = random.randrange(0, 52)
            secondcardi = random.randrange(0, 52)
        firstcard = self.thedeck.cards[firstcardi]
        secondcard = self.thedeck.cards[secondcardi]
        self.hand = [firstcard, secondcard]
        self.picked[firstcardi] = True
        self.picked[secondcardi] = True
        print(firstcard.toString())
        print(secondcard.toString())
        print("The sum of cards in your hand is: ")
        # print(firstcard.get_weight())
        # print(secondcard.get_weight())
        sum = firstcard.get_weight() + secondcard.get_weight()
        print(sum)
        if sum == 21:
            return False
        else:
            return True

    def hitMe(self):
        loop = True
        num = random.randrange(0, 52)
        nextCard = self.thedeck.cards[num]
        while loop:
            for x in self.hand:
                if x == nextCard:
                    num = random.randrange(0, 52)
                    nextCard = self.thedeck.cards[num]
                    continue
                else:
                    loop = False
        self.hand.append(nextCard)
        self.picked[num] = True
        print(nextCard.toString())
        print("All your cards in hand: ")
        sum = 0
        for x in self.hand:
            print(x.toString())
            sum += x.get_weight()
        print("The sum of cards in your hand is: ")
        print(sum)
        if sum > 21:
            return False
        else:
            return True


def main():
    userInterface()


def userInterface():
    print("Hello and Welcome to CardGame!")
    print("What would you like to play? (BlackJack)")
    input = sys.stdin.readline()
    while not (input.__contains__("BlackJack") or input.__contains__("blackjack") or input.__contains__("Blackjack")):
        print("Invalid input. Please enter a card game.")
        input = sys.stdin.readline()
    game = BlackJack()
    initiateBJGame(game)


def initiateBJGame(game):
    loop = True
    hit_me_bool = True
    pick_two_bool = game.pickTwo()
    if not pick_two_bool:
        print("Woah! 21 already!")
        loop = False
    while loop:
        print("Hit You? or Ready to show? (Type \"hitme\" or \"ready\")")
        inp = sys.stdin.readline()
        while not (inp.__contains__("hitme") or inp.__contains__("ready") or inp.__contains__("hit")):
            print("Invalid input. Please enter \"hitme\" or \"ready\"")
            inp = sys.stdin.readline()
        if inp.__contains__("hitme") or inp.__contains__("hit"):
            print("Card added to your hand: ")
            hit_me_bool = game.hitMe()
            if not hit_me_bool:
                print("Bust! Try again :(")
                loop = False
        else:
            loop = False


if __name__ == '__main__':
    main()






