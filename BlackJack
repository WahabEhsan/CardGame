'''This program is an BlackJack Python implementation
Author: Wahab Ehsan'''
import random


class Card:
    __type = ""
    __value = 0
    __color = ""

    def __init__(self, type, value):
        self.__type = type
        self.__value = value
        if type == "Heart" or "Diamond":
            self.__color = "Red"
        else:
            self.__color = "Black"

    def __type(self, type):
        set.__type = type

    def __type(self):
        return self.__type

    def set_value(self, value):
        set.__value = value

    def get_value(self):
        return self.__value

    def toString(self):
        val = self.__value
        if self.__value == 11:
            val = "Jack"
        elif self.__value == 12:
            val = "Queen"
        elif self.__value == 13:
            val = "King"
        elif self.__value == 14:
            val = "Ace"
        return "The card is {} of {}".format(val, self.__type)


class DeckOfCards:
    cards = []

    def __init__(self):
        self.addCards()

    def addCards(self):
        for x in range(2, 15):
            self.cards.append(Card("Hearts", x))
            self.cards.append(Card("Clubs", x))
            self.cards.append(Card("Spades", x))
            self.cards.append(Card("Diamonds", x))

    def toString(self):

        content = "["
        for x in self.cards:
            content += x.toString() + ", "
        # Returns the content and removes the extra space and comma by a backspace times two.
        return content + "\b"*2 + "]"


a = DeckOfCards()

print a.toString()


class BlackJack:
    thedeck = None
    hand = []
    picked = []

    def __init__(self):
        self.thedeck = DeckOfCards()
        self.picked = [False] * 52

    def pickTwo(self):
        firstcardi = 0
        secondcardi = 0
        while firstcardi == secondcardi:
            firstcardi = random.randrange(0, 52)
            secondcardi = random.randrange(0, 52)
        firstcard = self.thedeck.cards[firstcardi]
        secondcard = self.thedeck.cards[secondcardi]
        self.hand = [firstcard, secondcard]
        self.picked[firstcardi] = True
        self.picked[secondcardi] = True
        print(firstcard.toString())
        print(secondcard.toString())

    def hitMe(self):
        nextCardi = random.randrange(0, 52)
        for x in self.hand:
            while not self.picked[self.thedeck.cards.index(x)]:
                if self.picked[self.thedeck.cards.index(x)]:
                    nextCardi = random.randrange(0, 52)
        nextCard = self.thedeck.cards[nextCardi]
        self.hand.append(nextCard)
        self.picked[nextCardi] = True
        print(nextCard.toString())


b = BlackJack()

b.pickTwo()
b.hitMe()
b.hitMe()
